--
-- Tables for OIDC Server functionality, MySQL
--

DROP TABLE IF EXISTS access_token;
DROP TABLE IF EXISTS address;
DROP TABLE IF EXISTS approved_site;
DROP TABLE IF EXISTS approved_site_scope;
DROP TABLE IF EXISTS authentication_holder;
DROP TABLE IF EXISTS client_authority;
DROP TABLE IF EXISTS authorization_code;
DROP TABLE IF EXISTS client_grant_type;
DROP TABLE IF EXISTS client_response_type;
DROP TABLE IF EXISTS blacklisted_site;
DROP TABLE IF EXISTS client_details;
DROP TABLE IF EXISTS client_request_uri;
DROP TABLE IF EXISTS client_default_acr_value;
DROP TABLE IF EXISTS client_contact;
DROP TABLE IF EXISTS client_redirect_uri;
DROP TABLE IF EXISTS refresh_token;
DROP TABLE IF EXISTS client_resource;
DROP TABLE IF EXISTS client_scope;
DROP TABLE IF EXISTS token_scope;
DROP TABLE IF EXISTS system_scope;
DROP TABLE IF EXISTS user_info;
DROP TABLE IF EXISTS whitelisted_site;
DROP TABLE IF EXISTS whitelisted_site_scope;
DROP TABLE IF EXISTS pairwise_identifier;

CREATE TABLE IF NOT EXISTS access_token (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    token_value VARCHAR(4096),
    expiration TIMESTAMP NULL,
    token_type VARCHAR(256),
    refresh_token_id INTEGER,
    client_id VARCHAR(256),
    auth_holder_id INTEGER,
    id_token_id INTEGER,
    approved_site_id INTEGER
);

CREATE TABLE IF NOT EXISTS address (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    formatted VARCHAR(256),
    street_address VARCHAR(256),
    locality VARCHAR(256),
    region VARCHAR(256),
    postal_code VARCHAR(256),
    country VARCHAR(256)
);

CREATE TABLE IF NOT EXISTS approved_site (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id VARCHAR(4096),
    client_id VARCHAR(4096),
    creation_date TIMESTAMP NULL,
    access_date TIMESTAMP NULL,
    timeout_date TIMESTAMP NULL,
    whitelisted_site_id VARCHAR(256)
);

CREATE TABLE IF NOT EXISTS approved_site_scope (
    owner_id INTEGER,
    scope VARCHAR(256)
);

CREATE TABLE IF NOT EXISTS authentication_holder (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    owner_id INTEGER,
    authentication BLOB
);

CREATE TABLE IF NOT EXISTS client_authority (
    owner_id INTEGER,
    authority BLOB
);

CREATE TABLE IF NOT EXISTS authorization_code (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    code VARCHAR(256),
    authentication BLOB
);

CREATE TABLE IF NOT EXISTS client_grant_type (
    owner_id INTEGER,
    grant_type VARCHAR(2000)
);

CREATE TABLE IF NOT EXISTS client_response_type (
    owner_id INTEGER,
    response_type VARCHAR(2000)
);

CREATE TABLE IF NOT EXISTS blacklisted_site (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    uri VARCHAR(2048)
);

CREATE TABLE IF NOT EXISTS client_details (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    
    client_description VARCHAR(1024),
    reuse_refresh_tokens BOOLEAN DEFAULT 1 NOT NULL,
    dynamically_registered BOOLEAN DEFAULT 0 NOT NULL,
    allow_introspection BOOLEAN DEFAULT 0 NOT NULL,
    id_token_validity_seconds INTEGER DEFAULT 600 NOT NULL,
    
    client_id VARCHAR(256),
    client_secret VARCHAR(2048),
    access_token_validity_seconds INTEGER,
    refresh_token_validity_seconds INTEGER,
    
    application_type VARCHAR(256),
    client_name VARCHAR(256),
    token_endpoint_auth_method VARCHAR(256),
    subject_type VARCHAR(256),
    
    logo_uri CLOB,
    policy_uri CLOB,
    client_uri CLOB,
    tos_uri CLOB,

    jwks_uri CLOB,
    sector_identifier_uri CLOB,
    
    request_object_signing_alg VARCHAR(256),
    
    user_info_signed_response_alg VARCHAR(256),
    user_info_encrypted_response_alg VARCHAR(256),
    user_info_encrypted_response_enc VARCHAR(256),
    
    id_token_signed_response_alg VARCHAR(256),
    id_token_encrypted_response_alg VARCHAR(256),
    id_token_encrypted_response_enc VARCHAR(256),
    
    token_endpoint_auth_signing_alg VARCHAR(256),
    
    default_max_age INTEGER,
    require_auth_time BOOLEAN,
    created_at TIMESTAMP NULL,
    initiate_login_uri CLOB,
    post_logout_redirect_uri CLOB,
    UNIQUE(client_id)
);

CREATE TABLE IF NOT EXISTS client_request_uri (
    owner_id INTEGER,
    request_uri VARCHAR(2000)
);

CREATE TABLE IF NOT EXISTS client_default_acr_value (
    owner_id INTEGER,
    default_acr_value VARCHAR(2000)
);

CREATE TABLE IF NOT EXISTS client_contact (
    owner_id INTEGER,
    contact VARCHAR(256)
);

CREATE TABLE IF NOT EXISTS client_redirect_uri (
    owner_id INTEGER, 
    redirect_uri VARCHAR(2048) 
);

CREATE TABLE IF NOT EXISTS refresh_token (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    token_value VARCHAR(4096),
    expiration TIMESTAMP NULL,
    auth_holder_id INTEGER,
    client_id VARCHAR(256)
);

CREATE TABLE IF NOT EXISTS client_resource (
    owner_id INTEGER, 
    resource_id VARCHAR(256) 
);

CREATE TABLE IF NOT EXISTS client_scope (
    owner_id INTEGER,
    scope VARCHAR(2048)
);

CREATE TABLE IF NOT EXISTS token_scope (
    owner_id INTEGER,
    scope VARCHAR(2048)
);

CREATE TABLE IF NOT EXISTS system_scope (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    scope VARCHAR(256) NOT NULL,
    description VARCHAR(4096),
    icon VARCHAR(256),
    allow_dyn_reg BOOLEAN DEFAULT 0 NOT NULL,
    default_scope BOOLEAN DEFAULT 0 NOT NULL,
    structured BOOLEAN DEFAULT 0 NOT NULL,
    structured_param_description VARCHAR(256),
    UNIQUE(scope)
);

CREATE TABLE IF NOT EXISTS user_info (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    sub VARCHAR(256),
    preferred_username VARCHAR(256),
    name VARCHAR(256),
    given_name VARCHAR(256),
    family_name VARCHAR(256),
    middle_name VARCHAR(256),
    nickname VARCHAR(256),
    profile VARCHAR(256),
    picture VARCHAR(256),
    website VARCHAR(256),
    email VARCHAR(256),
    email_verified BOOLEAN,
    gender VARCHAR(256),
    zone_info VARCHAR(256),
    locale VARCHAR(256),
    phone_number VARCHAR(256),
    phone_number_verified BOOLEAN,
    address_id VARCHAR(256),
    updated_time VARCHAR(256),
    birthdate VARCHAR(256)
);

CREATE TABLE IF NOT EXISTS whitelisted_site (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    creator_user_id VARCHAR(256),
    client_id VARCHAR(256)
);

CREATE TABLE IF NOT EXISTS whitelisted_site_scope (
    owner_id INTEGER,
    scope VARCHAR(256)
);

CREATE TABLE IF NOT EXISTS pairwise_identifier (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    identifier VARCHAR(256),
    sub VARCHAR(256),
    sector_identifier VARCHAR(2048)
);
